{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","STATUS_CODE","STATUS_TODO","STATUS_DOING","tasks","id","status","title","username","TaskItem","handleDragStart","e","props","onDragStart","this","point","active","onDragEnd","className","draggable","React","Component","TaskCol","state","in","handleDragEnter","preventDefault","canDragIn","setState","handleDragLeave","handleDrop","dragTo","children","onDragEnter","onDragLeave","onDragOver","onDrop","App","activeId","task","cancelSelect","Object","keys","map","key","filter","t","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d51f37b8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nconst STATUS_TODO = 'STATUS_TODO';\n\t\t\tconst STATUS_DOING = 'STATUS_DOING';\n\t\t\tconst STATUS_DONE = 'STATUS_DONE';\n\t\t\t\n\t\t\tconst STATUS_CODE = {\n\t\t\t\tSTATUS_TODO: '',\n\t\t\t\tSTATUS_DOING: '',\n\t\t\t\n\t\t\t}\n\t\t\tlet tasks = [{\n\t\t\t\tid: 0,\n\t\t\t\tstatus: STATUS_TODO,\n\t\t\t\ttitle: '請移動我',\n\t\t\t\tusername: '',\n\t\t\t\n\t\t\t}]\n\t\t\t\n\t\t\tclass TaskItem extends React.Component {\n\t\t\t\thandleDragStart = (e) => {\n\t\t\t\t\tthis.props.onDragStart(this.props.id);\n\t\t\t\t}\n\t\t\t\trender() {\n\t\t\t\t\tlet { id, title, point, username, active, onDragEnd } = this.props;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tonDragStart={this.handleDragStart}\n\t\t\t\t\t\t\tonDragEnd={onDragEnd}\n\t\t\t\t\t\t\tid={`item-${id}`} \n\t\t\t\t\t\t\tclassName={'item' + (active ? ' active' : '')}\n\t\t\t\t\t\t\tdraggable=\"true\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<header className=\"item-header\">\n\t\t\t\t\t\t\t\t<span className=\"item-header-username\">{username}</span>\n\t\t\t\t\t\t\t\t<span className=\"item-header-point\">{point}</span>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t<main className=\"item-main\">{title}</main>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tclass TaskCol extends React.Component {\n\t\t\t\tstate = {\n\t\t\t\t\tin: false\n\t\t\t\t}\n\t\t\t\thandleDragEnter = (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (this.props.canDragIn) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tin: true\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\thandleDragLeave = (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (this.props.canDragIn) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tin: false\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\thandleDrop = (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.props.dragTo(this.props.status);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tin: false\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\trender() {\n\t\t\t\t\tlet { status, children } = this.props;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tid={`col-${status}`} \n\t\t\t\t\t\t\tclassName={'col'}\n\t\t\t\t\t\t\tonDragEnter={this.handleDragEnter}\n\t\t\t\t\t\t\tonDragLeave={this.handleDragLeave}\n\t\t\t\t\t\t\tonDragOver={this.handleDragEnter}\n\t\t\t\t\t\t\tonDrop={this.handleDrop}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<header className=\"col-header\">\n\t\t\t\t\t\t\t\t{STATUS_CODE[status]}\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t<main className={'col-main' + (this.state.in ? ' active' : '')}>\n\t\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tclass App extends React.Component {\n\t\t\t\tstate = {\n\t\t\t\t\ttasks: tasks,\n\t\t\t\t\tactiveId: null\n\t\t\t\t}\n\t\t\t\n\t\t\t\tonDragStart = (id) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveId: id\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdragTo = (status) => {\n\t\t\t\t\tlet { tasks,  activeId} = this.state;\n\t\t\t\t\tlet task = tasks[activeId];\n\t\t\t\t\tif (task.status !== status) {\n\t\t\t\t\t\ttask.status = status;\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\ttasks: tasks\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.cancelSelect();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcancelSelect = () => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveId: null\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trender() {\n\t\t\t\t\tlet { tasks, activeId } = this.state;\n\t\t\t\t\tlet { onDragStart, onDragEnd, cancelSelect } = this;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"task-wrapper\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tObject.keys(STATUS_CODE).map(status => \n\t\t\t\t\t\t\t\t\t<TaskCol \n\t\t\t\t\t\t\t\t\t\tstatus={status} \n\t\t\t\t\t\t\t\t\t\tkey={status} \n\t\t\t\t\t\t\t\t\t\tdragTo={this.dragTo}\n\t\t\t\t\t\t\t\t\t\tcanDragIn={activeId !== null && tasks[activeId].status !== status}>\n\t\t\t\t\t\t\t\t\t\t{ tasks.filter(t => t.status === status).map(t => \n\t\t\t\t\t\t\t\t\t\t\t<TaskItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={t.id}\n\t\t\t\t\t\t\t\t\t\t\t\tactive={t.id === activeId}\n\t\t\t\t\t\t\t\t\t\t\t\tid={t.id}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={t.title} \n\t\t\t\t\t\t\t\t\t\t\t\tpoint={t.point} \n\t\t\t\t\t\t\t\t\t\t\t\tusername={t.username}\n\t\t\t\t\t\t\t\t\t\t\t\tonDragStart={onDragStart}\n\t\t\t\t\t\t\t\t\t\t\t\tonDragEnd={cancelSelect}\n\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</TaskCol>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}